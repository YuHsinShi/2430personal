/*
*  (C) Copyright 2014-2016 Shenzhen South Silicon Valley microelectronics co.,limited
*
*  All Rights Reserved
*/


#ifndef _SDIO_IOCTL_H_
#define _SDIO_IOCTL_H_

#include <linux/ioctl.h>
#include <ssv_types.h>


struct ssv6xxx_sdiobridge_cmd {
    ssv_type_u32 in_data_len;
	ssv_type_u8* in_data;
#ifndef __x86_64
	ssv_type_u32 padding1;
#endif
	ssv_type_u32 out_data_len;
	ssv_type_u8* out_data;
#ifndef __x86_64
	ssv_type_u32 padding2;
#endif
    ssv_type_u32 response;
};

#define FILE_DEVICE_SSV6XXX_SDIO         179 // MMC_BLOCK_MAJOR // 179
#define FILE_DEVICE_SSV6XXX_SDIO_SEQ     0x50
#define FILE_DEVICE_SSV6XXX_SDIO_NAME    "ssvsdiobridge"


#if 0
#define IOCTL_SSV6XXX_SDIO_GET_DRIVER_VERSION \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x01, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_FUNCTION_NUMBER \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x02, struct ssv6xxx_sdiobridge_cmd)
#endif

#define IOCTL_SSV6XXX_SDIO_GET_FUNCTION_FOCUS \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x03, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_SET_FUNCTION_FOCUS \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x04, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_BUS_WIDTH \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x05, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_BUS_WIDTH \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x06, struct ssv6xxx_sdiobridge_cmd)


#define IOCTL_SSV6XXX_SDIO_GET_BUS_CLOCK \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x07, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_BUS_CLOCK \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x08, struct ssv6xxx_sdiobridge_cmd)


#define IOCTL_SSV6XXX_SDIO_GET_BLOCK_MODE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x09, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_BLOCK_MODE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x0a, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_BLOCKLEN \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x0b, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_BLOCKLEN \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x0c, struct ssv6xxx_sdiobridge_cmd)

#if 0
#define IOCTL_SSV6XXX_SDIO_GET_FN0_BLOCKLEN \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x0d, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_FN0_BLOCKLEN \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x0e, struct ssv6xxx_sdiobridge_cmd)


#define IOCTL_SSV6XXX_SDIO_GET_BUS_INTERFACE_CONTROL \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x0f, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_BUS_INTERFACE_CONTROL \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x10, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_INT_ENABLE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x11, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_INT_ENABLE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x12, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_AUTO_ACK_INT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x13, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_AUTO_ACK_INT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x14, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_ACK_INT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x15, struct ssv6xxx_sdiobridge_cmd)
#endif

#define IOCTL_SSV6XXX_SDIO_READ_BYTE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x16, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_WRITE_BYTE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x17, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_MULTI_BYTE_IO_PORT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x18, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_MULTI_BYTE_IO_PORT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x19, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_READ_MULTI_BYTE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x1a, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_WRITE_MULTI_BYTE \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x1b, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_GET_MULTI_BYTE_REG_IO_PORT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x1c, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_SET_MULTI_BYTE_REG_IO_PORT \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x1d, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_READ_REG \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x1e, struct ssv6xxx_sdiobridge_cmd)
#define IOCTL_SSV6XXX_SDIO_WRITE_REG \
	_IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x1f, struct ssv6xxx_sdiobridge_cmd)

#define IOCTL_SSV6XXX_SDIO_READ_DATA \
    _IOWR( FILE_DEVICE_SSV6XXX_SDIO, FILE_DEVICE_SSV6XXX_SDIO_SEQ+0x20, struct ssv6xxx_sdiobridge_cmd)

#endif	/* _SDIO_IOCTL_H_ */
