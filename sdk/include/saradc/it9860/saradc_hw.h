#ifndef SARADC_HW_H
#define SARADC_HW_H

#ifdef __cplusplus
extern "C" {
#endif

#include "saradc/saradc_type.h"

//=============================================================================
//                Constant Definition
//=============================================================================

//=============================================================================
//                Macro Definition
//=============================================================================

//=============================================================================
//                Structure Definition
//=============================================================================

//=============================================================================
//                Global Data Definition
//=============================================================================

//=============================================================================
//                Private Function Definition
//=============================================================================

//=============================================================================
//                Public Function Definition
//=============================================================================
//=============================================================================
/**
 * Fire SARADC Engine
 */
//=============================================================================
void
SARADC_DriverFire_Reg(
    void);

//=============================================================================
/**
 * Stop SARADC Engine
 */
//=============================================================================
void
SARADC_DriverStop_Reg(
    void);

//=============================================================================
/**
 * Set Clock Divider of SARADC
 */
//=============================================================================
void
SARADC_SetCLKDIV_Reg(
    SARADC_CLK_DIV divider);

//=============================================================================
/**
 * Set the Average Mode of SARADC
 */
//=============================================================================
void
SARADC_SetModeAVG_Reg(
    SARADC_MODE_AVG modeAVG);

//=============================================================================
/**
 * Set the Store Mode of SARADC
 */
//=============================================================================
void
SARADC_SetModeStore_Reg(
    SARADC_MODE_STORE modeStore);

//=============================================================================
/**
 * Set GAIN Driving of SARADC
 */
//=============================================================================
void
SARADC_SetGAIN_Reg(
    SARADC_AMPLIFY_GAIN driving);

//=============================================================================
/**
 * Set Write Buffer Size of SARADC
 */
//=============================================================================
void
SARADC_SetWBSize_Reg(
    uint16_t wbSize);

//=============================================================================
/**
 * Set Average Calculation Count of SARADC
 */
//=============================================================================
void
SARADC_SetAVGCALCount_Reg(
    SARADC_AVG_CAL_COUNT avgCalCount);

//=============================================================================
/**
 * Set Trigger Store Count of SARADC
 */
//=============================================================================
void
SARADC_SetTRIGStoreCount_Reg(
    uint8_t trigStoreCount);

//=============================================================================
/**
 * Select XAIN Signal of SARADC
 */
//=============================================================================
void
SARADC_SelectXAINSignal_Reg(
    SARADC_XAIN_SIGNAL signal);

//=============================================================================
/**
 * Set Valid XAIN of SARADC
 */
//=============================================================================
void
SARADC_SetValidXAIN_Reg(
    uint8_t validXAIN);

//=============================================================================
/**
 * Enable XAIN Interrupt of SARADC
 */
//=============================================================================
void
SARADC_EnableXAININTR_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Disable XAIN Interrupt of SARADC
 */
//=============================================================================
void
SARADC_DisableXAININTR_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Set XAIN memory base of SARADC
 */
//=============================================================================
void
SARADC_SetXAINMEMBase_Reg(
    SARADC_PORT hwPort,
    uint8_t     *baseAddr);

//=============================================================================
/**
 * Set XAIN trigger rule of SARADC
 */
//=============================================================================
void
SARADC_SetXAINTriggerRule_Reg(
    SARADC_PORT     hwPort,
    SARADC_TRIG_AVG trigAVG,
    uint16_t        maxAVGTrigger,
    uint16_t        minAVGTrigger);

//=============================================================================
/**
 * Set XAIN detection rule of SARADC
 */
//=============================================================================
void
SARADC_SetXAINDetectRule_Reg(
    SARADC_PORT hwPort,
    uint16_t    maxAVGDetect,
    uint16_t    minAVGDetect);

//=============================================================================
/**
 * Set XAIN Read pointer of SARADC
 */
//=============================================================================
void
SARADC_SetXAINRPTR_Reg(
    SARADC_PORT hwPort,
    uint16_t    rptr);

//=============================================================================
/**
 * Read Write pointer that XAIN recorded of SARADC
 */
//=============================================================================
void
SARADC_ReadXAINWPTR_Reg(
    SARADC_PORT hwPort,
    uint16_t    *wptr);

//=============================================================================
/**
 * Read average value that XAIN recorded of SARADC
 */
//=============================================================================
void
SARADC_ReadXAINAVGREG_Reg(
    SARADC_PORT hwPort,
    uint16_t    *avg);

//=============================================================================
/**
 * Reset XAIN OVERWT Interrupt of SARADC
 */
//=============================================================================
void
SARADC_ResetXAINOVERWT_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Reset average detection Interrupt of SARADC
 */
//=============================================================================
void
SARADC_ResetXAINAVGDetect_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Reset XAIN EVENT Interrupt of SARADC
 */
//=============================================================================
void
SARADC_ResetXAINEVENT_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Check XAIN OVERWT Interrupt of SARADC
 */
//=============================================================================
bool
SARADC_IsXAINOVERWT_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Check XAIN average Interrupt of SARADC
 */
//=============================================================================
SARADC_INTR_AVG
SARADC_IsXAINOutOfRange_Reg(
    SARADC_PORT hwPort);

//=============================================================================
/**
 * Check XAIN EVENT Interrupt of SARADC
 */
//=============================================================================
bool
SARADC_IsXAINEVENTOccurrence_Reg(
    SARADC_PORT hwPort);

#ifdef __cplusplus
}
#endif

#endif /* SARADC_HW_H */

